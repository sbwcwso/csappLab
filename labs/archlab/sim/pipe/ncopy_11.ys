#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
    xorq %rax,%rax		# count = 0;

K_Loop:
    mrmovq (%rdi), %r8
    iaddq $-11, %rdx
    jge Loop_1
    jmp Remainder
Loop_1:
    rmmovq %r8, (%rsi)	
    andq %r8, %r8
    mrmovq 0x50(%rdi), %r8
    jle Move_11
    iaddq $1, %rax
Move_11:
    rmmovq %r8, 0x50(%rsi)

Remainder_10:
    andq %r8, %r8
    mrmovq 0x48(%rdi), %r8
    jle Move_10
    iaddq $1, %rax
Move_10:
    rmmovq %r8, 0x48(%rsi)

Remainder_9:
    andq %r8, %r8	
    mrmovq 0x40(%rdi), %r8
    jle Move_9
    iaddq $1, %rax
Move_9:
    rmmovq %r8, 0x40(%rsi)

Remainder_8:
    andq %r8, %r8	
    mrmovq 0x38(%rdi), %r8
    jle Move_8
    iaddq $1, %rax
Move_8:
    rmmovq %r8, 0x38(%rsi)

Remainder_7:
    andq %r8, %r8	
    mrmovq 0x30(%rdi), %r8
    jle Move_7
    iaddq $1, %rax
Move_7:
    rmmovq %r8, 0x30(%rsi)

Remainder_6:
    andq %r8, %r8	
    mrmovq 0x28(%rdi), %r8
    jle Move_6
    iaddq $1, %rax
Move_6:
    rmmovq %r8, 0x28(%rsi)

Remainder_5:
    andq %r8, %r8	
    mrmovq 0x20(%rdi), %r8
    jle Move_5
    iaddq $1, %rax
Move_5:
    rmmovq %r8, 0x20(%rsi)

Remainder_4:
    andq %r8, %r8	
    mrmovq 0x18(%rdi), %r8
    jle Move_4
    iaddq $1, %rax
Move_4:
    rmmovq %r8, 0x18(%rsi)

Remainder_3:
    andq %r8, %r8	
    mrmovq 0x10(%rdi), %r8
    jle Move_3 
    iaddq $1, %rax
Move_3:
    rmmovq %r8, 0x10(%rsi)

Remainder_2:
    andq %r8, %r8	
    mrmovq 0x08(%rdi), %r8
    jle Move_2
    iaddq $1, %rax
Move_2:
    rmmovq %r8, 0x08(%rsi)

Remainder_1:
  andq %r8, %r8
  jle K_loop_inc 
  iaddq $1, %rax
K_loop_inc:
  andq %rdx, %rdx
  jne Continue_Loop
  ret
Continue_Loop:
  iaddq $0x58, %rdi	
  iaddq $0x58, %rsi
  jmp K_Loop

Remainder: 
  iaddq $6, %rdx
  jl Remainder_0_4
  rmmovq %r8, (%rsi)
  jg Remainder_7_10
  jmp Remainder_5

Remainder_0_4:
  iaddq $3, %rdx
  jl Remainder_0_1
  rmmovq %r8, (%rsi)
  jg Remainder_3_4
  jmp Remainder_2

Remainder_3_4:
  iaddq $-1, %rdx
  je Remainder_3
  irmovq $0, %rdx
  jmp Remainder_4

Remainder_0_1:
  iaddq $1, %rdx
  jl Done
  rmmovq %r8, (%rsi)
  jmp Remainder_1

Remainder_7_10:
  iaddq $-3, %rdx
  jg Remainder_9_10
  jl Remainder_6_7
  jmp Remainder_8

Remainder_9_10:
  iaddq $-1, %rdx
  je Remainder_9
  irmovq $0, %rdx
  jmp Remainder_10

Remainder_6_7:
  iaddq $1, %rdx
  je Remainder_7
  irmovq $0, %rdx
  jmp Remainder_6
  


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
