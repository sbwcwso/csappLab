                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f47808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6f805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7e803000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            |     # Loop header
0x032: 6300                 |     xorq %rax,%rax        # count = 0;
0x034: c0f2f7ffffffffffffff |     iaddq $-9, %rdx
0x03e: 50870000000000000000 |     mrmovq (%rdi), %r8
0x048: 72e901000000000000   |     jl Remainder
                            |     
0x051:                      | K_Loop:
0x051: 40860000000000000000 |     rmmovq %r8, (%rsi)    
0x05b: 6288                 |     andq %r8, %r8
0x05d: 50870800000000000000 |     mrmovq 0x08(%rdi), %r8
0x067: 717a00000000000000   |     jle Npos1
0x070: c0f00100000000000000 |     iaddq $1, %rax
0x07a:                      | Npos1:
0x07a: 40860800000000000000 |     rmmovq %r8, 0x08(%rsi)
0x084: 6288                 |     andq %r8, %r8        
0x086: 50871000000000000000 |     mrmovq 0x10(%rdi), %r8
0x090: 71a300000000000000   |     jle Npos2
0x099: c0f00100000000000000 |     iaddq $1, %rax
0x0a3:                      | Npos2:    
0x0a3: 40861000000000000000 |     rmmovq %r8, 0x10(%rsi)
0x0ad: 6288                 |     andq %r8, %r8
0x0af: 50871800000000000000 |     mrmovq 0x18(%rdi), %r8
0x0b9: 71cc00000000000000   |     jle Npos3        
0x0c2: c0f00100000000000000 |     iaddq $1, %rax
0x0cc:                      | Npos3:
0x0cc: 40861800000000000000 |     rmmovq %r8, 0x18(%rsi)
0x0d6: 6288                 |     andq %r8, %r8
0x0d8: 50872000000000000000 |     mrmovq 0x20(%rdi), %r8
0x0e2: 71f500000000000000   |     jle Npos4    
0x0eb: c0f00100000000000000 |     iaddq $1, %rax
0x0f5:                      | Npos4:
0x0f5: 40862000000000000000 |     rmmovq %r8, 0x20(%rsi)
0x0ff: 6288                 |     andq %r8, %r8
0x101: 50872800000000000000 |     mrmovq 0x28(%rdi), %r8
0x10b: 711e01000000000000   |     jle Npos5
0x114: c0f00100000000000000 |     iaddq $1, %rax
0x11e:                      | Npos5:
0x11e: 40862800000000000000 |     rmmovq %r8, 0x28(%rsi)
0x128: 6288                 |     andq %r8, %r8
0x12a: 50873000000000000000 |     mrmovq 0x30(%rdi), %r8
0x134: 714701000000000000   |     jle Npos6
0x13d: c0f00100000000000000 |     iaddq $1, %rax
0x147:                      | Npos6:
0x147: 40863000000000000000 |     rmmovq %r8, 0x30(%rsi)
0x151: 6288                 |     andq %r8, %r8
0x153: 50873800000000000000 |     mrmovq 0x38(%rdi), %r8
0x15d: 717001000000000000   |     jle Npos7
0x166: c0f00100000000000000 |     iaddq $1, %rax
0x170:                      | Npos7:
0x170: 40863800000000000000 |     rmmovq %r8, 0x38(%rsi)
0x17a: 6288                 |     andq %r8, %r8    
0x17c: 50874000000000000000 |     mrmovq 0x40(%rdi), %r8
0x186: 719901000000000000   |     jle Npos8
0x18f: c0f00100000000000000 |     iaddq $1, %rax
0x199:                      | Npos8:
0x199: 40864000000000000000 |     rmmovq %r8, 0x40(%rsi)
0x1a3: 6288                 |     andq %r8, %r8    
0x1a5: 71b801000000000000   |     jle Npos9
0x1ae: c0f00100000000000000 |     iaddq $1, %rax
0x1b8:                      | Npos9:
0x1b8: c0f74800000000000000 |     iaddq $0x48, %rdi    
0x1c2: c0f64800000000000000 |     iaddq $0x48, %rsi
                            | 
0x1cc: 50870000000000000000 |     mrmovq (%rdi), %r8
0x1d6: c0f2f7ffffffffffffff |     iaddq $-9, %rdx
0x1e0: 755100000000000000   |     jge K_Loop
                            | 
0x1e9:                      | Remainder:
0x1e9: c0f20500000000000000 |     iaddq $5, %rdx
0x1f3: 721802000000000000   |     jl Remainder_0_3
0x1fc: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x206: 765b02000000000000   |     jg Remainder_5_8
0x20f: 703703000000000000   |     jmp Remainder_4
                            | 
0x218:                      | Remainder_0_3:
0x218: c0f20200000000000000 |     iaddq $2, %rdx
0x222: 724702000000000000   |     jl Remainder_0_1
0x22b: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x235: 738903000000000000   |     je Remainder_2
0x23e: 706003000000000000   |     jmp Remainder_3
                            | 
0x247:                      | Remainder_0_1:
0x247: c0f20100000000000000 |     iaddq $1, %rdx
0x251: 73c803000000000000   |     je Remainder_1
0x25a: 90                   |     ret
                            | 
0x25b:                      | Remainder_5_8:
0x25b: c0f2feffffffffffffff |     iaddq $-2, %rdx
0x265: 768002000000000000   |     jg Remainder_7_8
0x26e: 720e03000000000000   |     jl Remainder_5
0x277: 70e502000000000000   |     jmp Remainder_6
                            | 
0x280:                      | Remainder_7_8:
0x280: c0f2ffffffffffffffff |     iaddq $-1, %rdx
0x28a: 73bc02000000000000   |     je Remainder_7
                            | 
0x293:                      | Remainder_8:
0x293: 6288                 |     andq %r8, %r8
0x295: 50873800000000000000 |     mrmovq 56(%rdi), %r8
0x29f: 71b202000000000000   |     jle Remainder_Nop8
0x2a8: c0f00100000000000000 |     iaddq $1, %rax
0x2b2:                      | Remainder_Nop8:
0x2b2: 40863800000000000000 |     rmmovq %r8, 56(%rsi)
                            | 
0x2bc:                      | Remainder_7:
0x2bc: 6288                 |     andq %r8, %r8
0x2be: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x2c8: 71db02000000000000   |     jle Remainder_Nop7
0x2d1: c0f00100000000000000 |     iaddq $1, %rax
0x2db:                      | Remainder_Nop7:
0x2db: 40863000000000000000 |     rmmovq %r8, 48(%rsi)
                            | 
0x2e5:                      | Remainder_6:
0x2e5: 6288                 |     andq %r8, %r8
0x2e7: 50872800000000000000 |     mrmovq 40(%rdi), %r8
0x2f1: 710403000000000000   |     jle Remainder_Nop6
0x2fa: c0f00100000000000000 |     iaddq $1, %rax
0x304:                      | Remainder_Nop6:
0x304: 40862800000000000000 |     rmmovq %r8, 40(%rsi)
                            | 
0x30e:                      | Remainder_5:
0x30e: 6288                 |     andq %r8, %r8
0x310: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x31a: 712d03000000000000   |     jle Remainder_Nop5
0x323: c0f00100000000000000 |     iaddq $1, %rax
0x32d:                      | Remainder_Nop5:
0x32d: 40862000000000000000 |     rmmovq %r8, 32(%rsi)
                            | 
0x337:                      | Remainder_4:
0x337: 6288                 |     andq %r8, %r8
0x339: 50871800000000000000 |     mrmovq 24(%rdi), %r8
0x343: 715603000000000000   |     jle Remainder_Nop4
0x34c: c0f00100000000000000 |     iaddq $1, %rax
0x356:                      | Remainder_Nop4:
0x356: 40861800000000000000 |     rmmovq %r8, 24(%rsi)
                            | 
0x360:                      | Remainder_3:
0x360: 6288                 |     andq %r8, %r8
0x362: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x36c: 717f03000000000000   |     jle Remainder_Nop3
0x375: c0f00100000000000000 |     iaddq $1, %rax
0x37f:                      | Remainder_Nop3:
0x37f: 40861000000000000000 |     rmmovq %r8, 16(%rsi)
                            | 
0x389:                      | Remainder_2:
0x389: 6288                 |     andq %r8, %r8
0x38b: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x395: 71a803000000000000   |     jle Remainder_Nop2
0x39e: c0f00100000000000000 |     iaddq $1, %rax
0x3a8:                      | Remainder_Nop2:
0x3a8: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x3b2: 6288                 |     andq %r8, %r8
0x3b4: 71e703000000000000   |     jle Done
0x3bd: c0f00100000000000000 |     iaddq $1, %rax
0x3c7: 90                   |     ret
                            | 
0x3c8:                      | Remainder_1:
0x3c8: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x3d2: 6288                 |     andq %r8, %r8
0x3d4: 71e703000000000000   |     jle Done
0x3dd: c0f00100000000000000 |     iaddq $1, %rax
                            |     
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3e7:                      | Done:
0x3e7: 90                   |     ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3e8:                      | End:
                            | #/* $end ncopy-ys */
0x3e8:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3e8:                      | 	.align 8
0x3e8:                      | src:
0x3e8: 0100000000000000     | 	.quad 1
0x3f0: feffffffffffffff     | 	.quad -2
0x3f8: 0300000000000000     | 	.quad 3
0x400: 0400000000000000     | 	.quad 4
0x408: 0500000000000000     | 	.quad 5
0x410: 0600000000000000     | 	.quad 6
0x418: 0700000000000000     | 	.quad 7
0x420: 0800000000000000     | 	.quad 8
0x428: 0900000000000000     | 	.quad 9
0x430: 0a00000000000000     | 	.quad 10
0x438: 0b00000000000000     | 	.quad 11
0x440: 0c00000000000000     | 	.quad 12
0x448: f3ffffffffffffff     | 	.quad -13
0x450: f2ffffffffffffff     | 	.quad -14
0x458: f1ffffffffffffff     | 	.quad -15
0x460: f0ffffffffffffff     | 	.quad -16
0x468: 1100000000000000     | 	.quad 17
0x470: 1200000000000000     | 	.quad 18
0x478: 1300000000000000     | 	.quad 19
0x480: ecffffffffffffff     | 	.quad -20
0x488: 1500000000000000     | 	.quad 21
0x490: eaffffffffffffff     | 	.quad -22
0x498: e9ffffffffffffff     | 	.quad -23
0x4a0: 1800000000000000     | 	.quad 24
0x4a8: e7ffffffffffffff     | 	.quad -25
0x4b0: e6ffffffffffffff     | 	.quad -26
0x4b8: e5ffffffffffffff     | 	.quad -27
0x4c0: 1c00000000000000     | 	.quad 28
0x4c8: e3ffffffffffffff     | 	.quad -29
0x4d0: 1e00000000000000     | 	.quad 30
0x4d8: e1ffffffffffffff     | 	.quad -31
0x4e0: 2000000000000000     | 	.quad 32
0x4e8: dfffffffffffffff     | 	.quad -33
0x4f0: deffffffffffffff     | 	.quad -34
0x4f8: ddffffffffffffff     | 	.quad -35
0x500: dcffffffffffffff     | 	.quad -36
0x508: dbffffffffffffff     | 	.quad -37
0x510: daffffffffffffff     | 	.quad -38
0x518: 2700000000000000     | 	.quad 39
0x520: d8ffffffffffffff     | 	.quad -40
0x528: d7ffffffffffffff     | 	.quad -41
0x530: d6ffffffffffffff     | 	.quad -42
0x538: 2b00000000000000     | 	.quad 43
0x540: d4ffffffffffffff     | 	.quad -44
0x548: d3ffffffffffffff     | 	.quad -45
0x550: 2e00000000000000     | 	.quad 46
0x558: 2f00000000000000     | 	.quad 47
0x560: d0ffffffffffffff     | 	.quad -48
0x568: 3100000000000000     | 	.quad 49
0x570: 3200000000000000     | 	.quad 50
0x578: cdffffffffffffff     | 	.quad -51
0x580: 3400000000000000     | 	.quad 52
0x588: 3500000000000000     | 	.quad 53
0x590: 3600000000000000     | 	.quad 54
0x598: c9ffffffffffffff     | 	.quad -55
0x5a0: 3800000000000000     | 	.quad 56
0x5a8: 3900000000000000     | 	.quad 57
0x5b0: c6ffffffffffffff     | 	.quad -58
0x5b8: 3b00000000000000     | 	.quad 59
0x5c0: c4ffffffffffffff     | 	.quad -60
0x5c8: c3ffffffffffffff     | 	.quad -61
0x5d0: c2ffffffffffffff     | 	.quad -62
0x5d8: c1ffffffffffffff     | 	.quad -63
0x5e0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x5f0:                      | 	.align 16
0x5f0:                      | Predest:
0x5f0: fadebc0000000000     | 	.quad 0xbcdefa
0x5f8:                      | dest:
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0: abefcd0000000000     | 	.quad 0xcdefab
0x7c8: abefcd0000000000     | 	.quad 0xcdefab
0x7d0: abefcd0000000000     | 	.quad 0xcdefab
0x7d8: abefcd0000000000     | 	.quad 0xcdefab
0x7e0: abefcd0000000000     | 	.quad 0xcdefab
0x7e8: abefcd0000000000     | 	.quad 0xcdefab
0x7f0:                      | Postdest:
0x7f0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x7f8:                      | .align 8
                            | # Run time stack
0x7f8: 0000000000000000     | 	.quad 0
0x800: 0000000000000000     | 	.quad 0
0x808: 0000000000000000     | 	.quad 0
0x810: 0000000000000000     | 	.quad 0
0x818: 0000000000000000     | 	.quad 0
0x820: 0000000000000000     | 	.quad 0
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
0x838: 0000000000000000     | 	.quad 0
0x840: 0000000000000000     | 	.quad 0
0x848: 0000000000000000     | 	.quad 0
0x850: 0000000000000000     | 	.quad 0
0x858: 0000000000000000     | 	.quad 0
0x860: 0000000000000000     | 	.quad 0
0x868: 0000000000000000     | 	.quad 0
0x870: 0000000000000000     | 	.quad 0
                            | 
0x878:                      | Stack:
